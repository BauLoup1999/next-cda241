name: Construction, publication et déploiement Docker

on:
  push:
    branches:
      - master   # ou "main" si votre branche par défaut s’appelle main

permissions:
  contents: read
  packages: write

jobs:
  build_and_deploy:
    name: Construire, publier et déployer
    runs-on: ubuntu-latest

    steps:
      - name: Récupérer le dépôt
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configurer QEMU (optionnel)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2

      - name: Configurer Docker Buildx (optionnel)
        uses: docker/setup-buildx-action@v2

      - name: Connexion au registre GitHub Container
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Construire et pousser l'image Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/bauloup1999/next-cda241/next-app:latest

      - name: Vérifier l'image poussée
        run: |
          echo "Tags disponibles pour ghcr.io/bauloup1999/next-cda241/next-app"
          curl -H "Authorization: Bearer ${{ secrets.GHCR_PAT }}" \
               -s https://ghcr.io/v2/bauloup1999/next-cda241/next-app/tags/list | jq .

      - name: Déployer la stack sur le serveur via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            # Se placer dans le dossier de l'application sur le serveur
            cd /home/${{ secrets.SSH_USER }}/next-cda241

            # (Optionnel) Se connecter à GHCR si l'image est privée
            # echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u bauloup1999 --password-stdin

            # Récupérer la dernière image puis relancer la stack
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d
